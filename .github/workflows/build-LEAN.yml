name: Build OpenWRT-LEAN for N1

on:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: N1-LEDE/.config
  DIY_SH: N1-LEDE/diy.sh
  FILES: N1-LEDE/files
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 检查机器配置
      run: |
        echo "警告⚠"
        echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
        echo "云编译建议取消勾选Node.js及其相关插件！"
        echo "已知CPU型号（降序）：7763,8370C,8272CL,8171M,E5系列"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "--------------------------硬盘信息--------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th
        
    - name: 释放磁盘空间前
      run: |
        echo "Before freeing up disk space"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="

    - name: "优化磁盘空间"
      uses: "hugoalh/disk-space-optimizer-ghaction@v0.8.1"
      with:
        operate_sudo: "True"
        general_include: ".+"
        general_exclude: |-
          ^GCC$
          ^G\+\+$
          Clang
          LLVM
        docker_include: ".+"
        docker_prune: "True"
        docker_clean: "True"
        apt_prune: "True"
        apt_clean: "True"
        homebrew_prune: "True"
        homebrew_clean: "True"
        npm_prune: "True"
        npm_clean: "True"
        os_swap: "True"

    - name: 释放磁盘空间
      uses: easimon/maximize-build-space@master
      with: 
        root-reserve-mb: 10240
        swap-size-mb: 1
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: 释放磁盘空间完成
      run: |
        echo "Free up disk space complete"
        echo "=============================================================================="
        df -hT
        echo "=============================================================================="
        
    - name: 检出代码
      uses: actions/checkout@main
      
    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt update
        sudo -E apt -y install $(curl -fsSL https://is.gd/depends_ubuntu_2204)
        sudo -E apt -y autoremove --purge
        sudo -E apt -y install libfuse-dev
        sudo -E apt -y install rename
        sudo -E apt -y install time
        sudo -E apt -y install gn
        sudo -E systemctl daemon-reload
        sudo -E apt clean
        sudo timedatectl set-timezone "$TZ"
        sudo chown $USER:$GROUPS $GITHUB_WORKSPACE

    - name: 克隆源代码
      working-directory: ./
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        sed -i 's|https://github.com/coolsnowwolf/luci.git;openwrt-23.05|https://github.com/coolsnowwolf/luci|g' feeds.conf.default

    - name: 缓存编译结果
      uses: stupidloud/cachewrtbuild@main
      with:
        ccache: 'true'
        mixkey: amlogic-${{ env.REPO_BRANCH }}
        prefix: ${{ github.workspace }}/openwrt
        
    - name: 更新并安装依赖包
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 加载自定义配置
      run: |
        [ -e $FILES ] && mv $FILES openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_SH

    # - name: SSH connect to Actions
      # uses: P3TERX/ssh2actions@main
      # if: (github.event.inputs.ssh == 'true') || contains(github.event.action, 'ssh')

    - name: 下载软件包
      working-directory: ./openwrt
      run: |
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: 清理磁盘空间
      if: (!cancelled())
      run: |
        echo "清理之前："
        df -hT
        mkdir openwrt-armvirt
        mkdir /workdir/upload
        cp openwrt/bin/targets/*/*/*.tar.gz /workdir/upload/
        mv openwrt/bin/targets/*/*/*.tar.gz openwrt-armvirt/
        echo -e "\n"
        echo "列出空间占用前10的目录或文件："
        sudo du -h --max-depth=1 /workdir |sort -nr | head -10
        rm -rf /workdir/openwrt/ && sync
        echo -e "\n"
        echo "清理之后："
        df -hT
        echo -e "\n"
        echo "/workdir路径文件"
        ls -l
        echo -e "\n"
        echo "列出空间占用前10的目录或文件："
        sudo du -h --max-depth=1 /workdir |sort -nr | head -10

    - name: 打包内核
      uses: ophub/flippy-openwrt-actions@main
      env:
        WHOAMI: deng
        OPENWRT_ARMVIRT: openwrt-armvirt/*.tar.gz
        PACKAGE_SOC: s905d
        KERNEL_AUTO_LATEST: true
        KERNEL_VERSION_NAME: 5.15.10_6.1.10
        # KERNEL_REPO_URL: https://github.com/quanjindeng/Actions_OpenWrt-Amlogic/tree/main/kernel
        
    - name: 整理文件
      run: mv /opt/openwrt_packit/output/* /workdir/upload/
      
    - name: 发布固件
      uses: ncipollo/release-action@v1
      with:
        tag: openwrt_armvirt_v8_${{ env.PACKAGED_OUTPUTDATE }}
        artifacts: /workdir/upload/*
        allowUpdates: true
        token: ${{ secrets.GB_TOKEN }}
        body: |
          ### **适用于Amlogic平台的N1盒子OpenWrt固件--全插件**
           * **固件信息：**
          - 🌐 默认地址: `192.168.1.101`
          - 🔑 默认密码: `password`
          - 💻 平台架构: `armvirt_64`
          - ⚽ 固件源码: ${{ env.REPO_URL }}
          - 💝 源码分支: ${{ env.REPO_BRANCH }}
          - 📦 打包日期：${{ env.PACKAGED_OUTPUTDATE }}
          * **使用方法：**
          1. 安装固件：写入U盘直接使用；U盘启动后可输入命令 `openwrt-install-amlogic` 按照英文提示写入到`EMMC`
          2. 更新固件：将固件放在 `/mnt/mmcblk2p4/` 目录下，输入命令 `openwrt-update-amlogic` 可直接更新
          3. 登录Luci界面后，可直接使用`晶晨宝盒`插件进行写入emmc或者更新操作（使用前先按需求填写好插件设置），免去手动输入命令！
          * **更新说明：**
          目前已集成大部分常用插件！
          * **提示：**
          `openwrt_s905d_n1_XX_XX` 文件名才是固件！

    - name: 清理Actions空间
      uses: Mattraks/delete-workflow-runs@main
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          keep_minimum_runs: 0
          retain_days: 7
          #retain_days: ${{ github.event.inputs.action_days }}
    
    - name: 删除多余releases
      uses: dev-drprasad/delete-older-releases@master
      with:
        repo: ${{ github.repository }}
        keep_latest: 6
        #keep_latest: ${{ github.event.inputs.rele }}
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GB_TOKEN }}
